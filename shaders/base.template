#version 330

////////////////
// constants
////////////////

#define M_PI 3.1415926536

////////////////
// inputs
////////////////

// from vertex shader
in vec2 frag_pos;

// screen uniforms
uniform vec2  screen_vector;
uniform vec3  screen_offset;
uniform float screen_height;

// box uniforms
uniform float box_min_x;
uniform float box_max_x;
uniform float box_min_y;
uniform float box_max_y;

// stimulus-specific uniforms
${decl_uniforms}

////////////////
// output
////////////////

out vec4 out_color;

////////////////
// functions
////////////////

${decl_functions}

////////////////
// main program
////////////////

void main() {
    // compute screen position in cartesian coordinates
    vec3 pos = screen_offset + frag_pos.xxy*vec3(screen_vector, 0.5*screen_height);

    // compute screen position in spherical coordinates
    float r     = length(pos);
    float phi   = acos(pos.z / r);
    float theta = atan(pos.y, pos.x);

    // declare fragment color variable (monochromatic)
    float color = 0.0;
    float alpha = 1.0;

    // calculated fragment color
    if ((box_min_y <= phi) && (phi <= box_max_y) && (box_min_x <= theta) && (theta <= box_max_x)){
        ${calc_color}
    } else {
        color = 0.0;
        alpha = 0.0;
    }

    // assign the output color
    out_color = vec4(color, color, color, alpha);
}
